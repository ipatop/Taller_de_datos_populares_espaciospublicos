parksCiu %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel()+
xlab('Area (ha)') + ylab('4*ASP (Deff)')
parksCiu %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel()+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,50)
parksCiu %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(max.overlaps = Inf)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,50)
parksCiu %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(max.overlaps = 10)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,50)
require(tidyverse)
parksCiu$nombre_ev
(parksCiu %>% mutate(nombre_ev=na_if(nombre,c('S/D','SIN NOMBRE'))))$nombre_ev
(parksCiu %>% mutate(nombre_ev=na_if(nombre,'S/D') %>% mutate(nombre_ev=na_if(nombre,'SIN NOMBRE'))))$nombre_ev
(parksCiu %>% mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>% mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')))$nombre_ev
parksCiu %>% mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>% mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')))
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(max.overlaps = 10)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,50)
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(max.overlaps = 10,cex=.5)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,50)
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(max.overlaps = 10,cex=1)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,50)
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(max.overlaps = 10,cex=3)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,50)
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,20)
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,10) # Jugar con los límites
require(tidyverse)
View(parksCiu$nombre_ev)
especiales = c('AMEGHINO, FLORENTINO',
'HOUSSAY, BERNARDO A., Dr.',
'MISERERE',
'MARTIN FIERRO',
'BARRANCAS de BELGRANO',
'PARQUE PDTE SARMIENTO',
'CENTENARIO',
'CHACABUCO',
'DE LOS PATRICIOS',
'AVELLANEDA, NICOLÁS, Pdte.',
'ANDES, LOS',
'LEZAMA',
'ALMAGRO',
'RESERVA ECOLÓGICA',
'AV.9 DE JULIO')
parksCiu$especial = is.element(parksCiu$nombre_ev,especiales)
?geom_label_repel()
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,10) # Jugar con los límites
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,50) # Jugar con los límites
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,20) # Jugar con los límites
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,5) # Jugar con los límites
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,1) # Jugar con los límites
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,.12) # Jugar con los límites
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,1) # Jugar con los límites
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,5) # Jugar con los límites
parksCiu %>%
mutate(nombre_ev=na_if(nombre_ev,'S/D')) %>%
mutate(nombre_ev=na_if(nombre_ev,'SIN NOMBRE')) %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),alpha=0.5) +
geom_point()+
geom_label_repel(data=parksCiu[parksCiu$especial,],mapping=aes(x=area/100**2,y=4*ASP,color=clasificac,label=nombre_ev),max.overlaps = 10,cex=2)+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,10) # Jugar con los límites
### Gráficos de distribución
## Exploración de áreas de los espacios (Ciudad) por categoría (clasificac):
parksCiu %>%
ggplot(aes(x=area/100**2,fill=clasificac),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
facet_wrap(~clasificac,scales = "free") +
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)')
parksCiu %>%
ggplot(aes(x=area/100**2,fill=clasificac),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)')
parksCiu %>%
ggplot(aes(x=area/100**2),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)')
parksCiu %>%
ggplot(aes(x=area/100**2),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)') +
scale_x_log10()
parksCiu %>% quantile(c(.1,.25))
parksCiu %>% quantile(c(.1,.25),na.rm=TRUE)
parksCiu$area %>% quantile(c(.1,.25))
parksCiu$area/100**2 %>% quantile(c(.1,.25))
parksCiu$area/100**2 %>% quantile(c(.1,.25))
(parksCiu$area/100**2) %>% quantile(c(.1,.25))
(parksCiu$area/100) %>% quantile(c(.1,.25))
parksCiu %>% select(area/100>1) %>%
ggplot(aes(x=clasificac)) +
geom_bar()
parksCiu %>% select(area/100>1) %>%
mutate('cates'=count(group_by(clasificac)))
parksCiu %>% select(area/100>1) %>%
mutate(cates=count(group_by(clasificac)))
parksCiu %>% select(area/100>1) %>%
mutate(cates=count(clasificac))
parksCiu %>% select(area/100>1)
parksCiu %>% select(area>100) %>%
group_by(clasificac)
parksCiu %>% select(area>100)
parksCiu %>% filter(area>100)
parksCiu %>% filter(area/100>1)
parksCiu %>% filter(area/100>1) %>%
count(clasificac)
parksCiu %>% filter(area/100>1) %>%
count(clasificac) %>%
ggplot(aes(x=x,height=n)) +
geom_bar()
parksCiu %>% filter(area/100>1) %>%
count(clasificac) %>%
ggplot(aes(x=clasificac,height=n)) +
geom_bar()
parksCiu %>% filter(area/100>1) %>%
#count(clasificac) %>%
ggplot(aes(x=clasificac)) +
geom_bar()
parksCiu %>% filter(area/100>1) %>%
#count(clasificac) %>%
ggplot(aes(x=clasificac)) +
geom_bar(las=2)
parksCiu %>% filter(area/100>1) %>%
#count(clasificac) %>%
ggplot(aes(x=clasificac)) +
geom_bar(las=2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
parksCiu %>% filter(area/100>0) %>% # Agarro parques mayores a cierta proporcion de manzan
#count(clasificac) %>%
ggplot(aes(x=clasificac)) +
geom_bar(las=2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
parksCiu %>% filter(area/100>50) %>% # Agarro parques mayores a cierta proporcion de manzan
#count(clasificac) %>%
ggplot(aes(x=clasificac)) +
geom_bar(las=2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
parksCiu %>% filter(area/100>100) %>% # Agarro parques mayores a cierta proporcion de manzan
#count(clasificac) %>%
ggplot(aes(x=clasificac)) +
geom_bar(las=2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
parksCiu %>% filter(area/100>10) %>% # Agarro parques mayores a cierta proporcion de manzan
#count(clasificac) %>%
ggplot(aes(x=clasificac)) +
geom_bar(las=2) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
### Gráficos de distribución
## Exploración de áreas de los espacios (Ciudad) por categoría (clasificac):
parksCiu %>%
ggplot(aes(x=area/100**2,fill=clasificac),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
facet_wrap(~clasificac,scales = "free") +
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)')
### Gráficos de distribución
## Exploración de áreas de los espacios (Ciudad) por categoría (clasificac):
parksCiu %>%
ggplot(aes(x=area/100**2,fill=clasificac),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
facet_wrap(~clasificac,scales = "free") +
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)')+
geom_vline(xintercept = 0.02)
### Gráficos de distribución
## Exploración de áreas de los espacios (Ciudad) por categoría (clasificac):
parksCiu %>%
ggplot(aes(x=area/100**2,fill=clasificac),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
facet_wrap(~clasificac,scales = "free") +
theme(legend.position = 'none') +
xlim(0,1) +
xlab('Area / Manzana (1 ha)')+
geom_vline(xintercept = 0.02)
### Gráficos de distribución
## Exploración de áreas de los espacios (Ciudad) por categoría (clasificac):
parksCiu %>%
ggplot(aes(x=area/100**2,fill=clasificac),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
facet_wrap(~clasificac,scales = "free") +
theme(legend.position = 'none') +
#xlim(0,1) +
xlab('Area / Manzana (1 ha)')+
geom_vline(xintercept = 0.025)
### Gráficos de distribución
## AREAS
parksOSM %>%
ggplot(aes(x=area/100**2),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)') +
scale_x_log10()
### Gráficos de distribución
## AREAS
parksOSM %>%
ggplot(aes(x=area/100**2),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)') +
scale_x_log10() +
geom_vline(xintercept = .025)
# Esto equivale a tirar
sum(parksCiu$area/100**2<.025)
mean(parksCiu$area/100**2<.025)
mean(parksOSM$area/100**2<.025)
### Gráficos de distribución
## AREAS
df = parksOSM %>% select(area) %>% mutate(fuente='OSM')
df = df %>% bind_rows(.,
parksCiu %>% select(area) %>% mutate(fuente='Ciud') )
df
df %>%
ggplot(aes(x=area/100**2,col=fuente),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
theme(legend.position = 'none') +
xlim(0,10) +
xlab('Area / Manzana (1 ha)') +
scale_x_log10() +
geom_vline(xintercept = .025)
df %>%
ggplot(aes(x=area/100**2,col=fuente),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
xlim(0,10) +
xlab('Area / Manzana (1 ha)') +
scale_x_log10() +
geom_vline(xintercept = .025)
df %>%
ggplot(aes(x=area/100**2,col=fuente),alpha=0.5) +
geom_density() + # Para graficar histograma (density plot)
#stat_ecdf() + # Para graficar distribución acumulada
xlim(0,10) +
xlab('Area / Manzana (1 ha)') +
scale_x_log10() +
geom_vline(xintercept = .025)
df %>%
ggplot(aes(x=area/100**2,col=fuente),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
xlim(0,10) +
xlab('Area / Manzana (1 ha)') +
scale_x_log10() +
geom_vline(xintercept = .025)
df = parksOSM %>% select(ASP) %>% mutate(fuente='OSM')
df = df %>% bind_rows(.,
parksCiu %>% select(ASP) %>% mutate(fuente='Ciud') )
df %>%
ggplot(aes(x=ASP*4,fill=fuente),alpha=0.5) +    geom_density() +
#stat_ecdf() +
#xlim(0,10) +
xlab('4*ASP (m, Deff)')
df %>%
ggplot(aes(x=ASP*4,color=fuente),alpha=0.5) +    geom_density() +
#stat_ecdf() +
#xlim(0,10) +
xlab('4*ASP (m, Deff)')
df %>%
ggplot(aes(x=ASP*4,color=fuente),alpha=0.5) +
#geom_density() +
stat_ecdf() +
#xlim(0,10) +
xlab('4*ASP (m, Deff)')
parksOSM$ASP
summary(parksOSM$ASP)
summary(parksOSM$perimeter)
summary(parksOSM$area)
summary(parksOSM$area<0)
parksOSM %>% filter(area<0) %>%
leaflet() %>%
addProviderTiles(provider=providers$OpenStreetMap) %>%
addPolygons()
parksOSM %>%
filter(area<0) %>%
st_transform(crs=4326) %>%
leaflet() %>%
addProviderTiles(provider=providers$OpenStreetMap) %>%
addPolygons()
parksOSM %>%
filter(area<0)
parksOSM %>%
filter(area<0) %>% st_make_valid() %>% st_area()
parksOSM = st_make_valid(parksOSM)
# Agrego MAGNITUDES a SF
## AREAS
parksOSM$area = as.numeric(st_area(parksOSM))
parksCiu$area = as.numeric(st_area(parksCiu))
### Gráficos de distribución
## AREAS
df = parksOSM %>% select(area) %>% mutate(fuente='OSM')
df = df %>% bind_rows(.,
parksCiu %>% select(area) %>% mutate(fuente='Ciud') )
df %>%
ggplot(aes(x=area/100**2,col=fuente),alpha=0.5) +
#geom_density() + # Para graficar histograma (density plot)
stat_ecdf() + # Para graficar distribución acumulada
xlim(0,10) +
xlab('Area / Manzana (1 ha)') +
scale_x_log10() +
geom_vline(xintercept = .025)
parksOSM %>%
filter(area<0) %>%
st_transform(crs=4326) %>%
leaflet() %>%
addProviderTiles(provider=providers$OpenStreetMap) %>%
addPolygons()
mean(parksOSM$area/100**2<.025) # El 11%
df = parksOSM %>% select(ASP) %>% mutate(fuente='OSM')
df = df %>% bind_rows(.,
parksCiu %>% select(ASP) %>% mutate(fuente='Ciud') )
df %>%
ggplot(aes(x=ASP*4,color=fuente),alpha=0.5) +
#geom_density() +
stat_ecdf() +
#xlim(0,10) +
xlab('4*ASP (m, Deff)')
parksCiu$perimeter = as.numeric(st_perimeter(parksCiu))
parksOSM$perimeter = as.numeric(st_perimeter(parksOSM))
## AREA SOBRE PERIMETRO
parksCiu$ASP = parksCiu$area/parksCiu$perimeter
parksOSM$ASP = parksOSM$area/parksOSM$perimeter
df = parksOSM %>% select(ASP) %>% mutate(fuente='OSM')
df = df %>% bind_rows(.,
parksCiu %>% select(ASP) %>% mutate(fuente='Ciud') )
df %>%
ggplot(aes(x=ASP*4,color=fuente),alpha=0.5) +
#geom_density() +
stat_ecdf() +
#xlim(0,10) +
xlab('4*ASP (m, Deff)')
parksOSM %>%
ggplot(aes(x=area/100**2,y=4*ASP),alpha=0.5) +
geom_point()+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,10) # Jugar con los límites
df = parksOSM %>% select(area,ASP) %>% mutate(fuente='OSM')
df = df %>% bind_rows(.,
parksCiu %>% select(area,ASP) %>% mutate(fuente='Ciud') )
df %>%
ggplot(aes(x=area/100**2,y=4*ASP),alpha=0.5) +
geom_point()+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,10) # Jugar con los límites
df %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=fuente),alpha=0.5) +
geom_point()+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
xlim(0,10) # Jugar con los límites
df %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=fuente),alpha=0.5) +
geom_point()+
xlab('Area (ha)') + ylab('4*ASP (Deff)')+
df %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=fuente),alpha=0.5) +
geom_point()+
xlab('Area (ha)') + ylab('4*ASP (Deff)')
df %>%
ggplot(aes(x=area/100**2,y=4*ASP,color=fuente),alpha=0.5) +
geom_point()+
xlab('Area (ha)') + ylab('4*ASP (Deff)')
df %>%
mutate(color=ifelse(fuente=='OSM','green','red')) %>%
leaflet() %>% addProviderTiles(provider = providers$OpenStreetMap) %>%
addPolygons()
df %>%
filter(area>25)
df %>%
filter(area>25) %>%
st_transform(crs=4326) %>%
mutate(color=ifelse(fuente=='OSM','green','red')) %>%
leaflet() %>% addProviderTiles(provider = providers$OpenStreetMap) %>%
addPolygons()
df %>%
filter(area>25) %>%
st_transform(crs=4326) %>%
mutate(color=ifelse(fuente=='OSM','green','red')) %>%
leaflet() %>% addProviderTiles(provider = providers$OpenStreetMap) %>%
addPolygons(color=~color)
df %>%
filter(area>50) %>% # Probar con 25 y con 50
st_transform(crs=4326) %>%
mutate(color=ifelse(fuente=='OSM','green','red')) %>%
leaflet() %>% addProviderTiles(provider = providers$OpenStreetMap) %>%
addPolygons(color=~color)
